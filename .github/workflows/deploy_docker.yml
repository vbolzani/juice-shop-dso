name: "Deploy Docker latest image with a SSH push"
on:
  push:
    branches:
      - main 
  workflow_run:
    workflows: ["EC2 deploy with Terraform"]
    types: [completed]

jobs:
  deploy:
    name: App deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: vbolzani/juice-shop-dso:latest

      - name: "Setup terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: "Setup AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: "Get deployed EC2 public IP"
        run:  |
          cd terraform
          terraform init
          EC2_PUBLIC_IP=$(terraform output -raw deployed_public_ip)
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV

      - name: Setup SSH key
        run: |
          echo "$EC2_PRIVATE_KEY" > private.key
          sudo chmod 600 private.key
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_SECRET_KEY }}

      - name: "Copying deploy script"
        run: |
          scp -o StrictHostKeyChecking=no -i private.key ./terraform/deploy.sh ubuntu@${EC2_PUBLIC_IP}:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no -i private.key ubuntu@${EC2_PUBLIC_IP} chmod +x /home/ubuntu/deploy.sh
          
      - name: "Executing deploying script"
        run: |
          ssh -o StrictHostKeyChecking=no -i private.key ubuntu@${EC2_PUBLIC_IP} /home/ubuntu/deploy.sh